name: Docker-CI

on:
  push:
    branches:
      - main
      - ecr-actions
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  dependencies:
  # install/build maven dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Set up archived Oracle JDK 17.0.3.1
      uses: oracle-actions/setup-java@v1
      with:
        website: oracle.com
        release: 17
        version: 17.0.3.1
    - name: Maven build
      run: |
       echo "maven build - Clean install"
       mvn clean install -Dmaven.test.skip=true
       mkdir -p target/dependency && (cd target/dependency; jar -xf ../elrrexternalservices-0.0.1-SNAPSHOT.jar)

  build:
    # requires dependency from step above
    needs: dependencies
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: externalservices
        run: |
          echo "Starting docker build"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
